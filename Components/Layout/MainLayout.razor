@inherits LayoutComponentBase

@inject NavigationManager UriHelper
@using AppointmentPlanner.Data
@using AppointmentPlanner.Models
@using Microsoft.JSInterop;
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Popups
@using KavaPryct.Services
@inject IJSRuntime JSRuntime;
@using Microsoft.Maui.ApplicationModel
@using Microsoft.Maui.Devices
@inject UpdaterService Updater


<div class="sb-content-overlay @(hide)">
    <div class="sb-loading">
        <svg class="circular" height="40" width="40">
            <circle class="path" cx="25" cy="25" r="20" fill="none" stroke-width="6" stroke-miterlimit="10" />
        </svg>
    </div>
    <div class="sb-caption">
        <h4 class="my-4">Iniciando KAVA App</h4>
    </div>
</div>
<div class="planner-wrapper"
     style="width: 100%; visibility:@(visible); opacity:@(opacity)">
    <div class="planner-header">
        <SfAppBar ColorMode="AppBarColor.Primary" CssClass="custom-appbar">
            <div class="side-bar-opener">
                <span class="open-icon e-icons" @onclick="@showSideBar"></span>
            </div>
            <div class="name-cantainer">
                <span class="clinic-image icon-logo"></span>
                <h1 class="clinic-name appointment-title">KAVA PSICOLOGÍA</h1>
            </div>
            <AppBarSpacer></AppBarSpacer>
            @* <div class='logout-container'>
                <div class="logout-icon-container"><span class="icon-logout logout-image"></span></div>
                <span class='logout-name'>Logout</span>
            </div> *@
            @* <div class="sb-header-item sb-table-cell sb-download-wrapper">
                <a href="https://github.com/syncfusion/ej2-showcase-blazor-appointment-planner" target="_blank">
                    <div id="github" class="sb-github-btn">
                        <div class="github-image">
                            <img src="css/appoinment/mark.svg" alt="github" />
                        </div>
                    </div>
                </a>
            </div> *@
        </SfAppBar>
    </div>
    
    <SfSidebar ID="plannerSiderBar"
               EnableGestures="false"
               @bind-IsOpen="open"
               MediaQuery="(min-width: 600px)"
               Type="SidebarType.Auto"
               Created="OnCreate"
               CloseOnDocumentClick="onDocumentClick">
               <ChildContent>
                   <div class="dock">
                        <div class="info align-center">
                            <div class="image"><img src="css/appoinment/assets/images/kavaicon.png" alt="Admin" /></div>
                            <div class="content nameContent">
                                <p class='name'>KAVA APP</p>
                                <p class='user-type'>By: IH Solutions</p>
                            </div>
                        </div>
                        <div class="sideparent menulist">
                            <ul class="nav flex-column">
                                <li class="nav-item e-list-item">
                                    <NavLink class="nav-link sidebar-item" href="dashboard" @onclick="@CloseSidePane">
                                        <span class="dashboard-image">
                                            <span class="item-image iconIHS-dashboard"></span>
                                        </span>
                                        <span class="text" aria-hidden="true" title="Dashboard">Dashboard</span>
                                    </NavLink>
                                </li>
                                <li class="nav-item e-list-item">
                                    <NavLink class="nav-link sidebar-item" href="schedule" Match="NavLinkMatch.All" @onclick="@CloseSidePane">
                                        <span class="dashboard-image">
                                            <span class="item-image iconIHS-calendar"></span>
                                        </span>
                                        <span class="text" aria-hidden="true" title="Schedule">Schedule</span>
                                    </NavLink>
                                </li>
                                <li class="nav-item e-list-item">
                                    <NavLink class="nav-link sidebar-item" href="psicos" @onclick="@CloseSidePane">
                                        <span class="dashboard-image">
                                            <span class="item-image iconIHS-psicos"></span>
                                        </span>
                                        <span class="text" aria-hidden="true" title="Employees">Empleados</span>
                                    </NavLink>
                                </li>
                                <li class="nav-item e-list-item">
                                    <NavLink class="nav-link sidebar-item" href="patients" @onclick="@CloseSidePane">
                                        <span class="dashboard-image">
                                            <span class="item-image iconIHS-contacts"></span>
                                        </span>
                                        <span class="text" aria-hidden="true" title="Pacientes">Pacientes</span>
                                    </NavLink>
                                </li>
                                <li class="nav-item e-list-item">
                                    <NavLink class="nav-link sidebar-item" href="expense" @onclick="@CloseSidePane">
                                        <span class="dashboard-image">
                                            <span class="item-image iconIHS-trans"></span>
                                        </span>
                                        <span class="text" aria-hidden="true" title="Movmnts">Movimientos</span>
                                    </NavLink>
                                </li>
                                <li class="nav-item e-list-item">
                                    <NavLink class="nav-link sidebar-item" href="preference" @onclick="@CloseSidePane">
                                        <span class="dashboard-image">
                                            <span class="item-image iconIHS-preference"></span>
                                        </span>
                                        <span class="text" aria-hidden="true" title="Preference">Preference</span>
                                    </NavLink>
                                </li>
                                <li class="nav-item e-list-item">
                                    <NavLink class="nav-link sidebar-item" href="about" @onclick="@CloseSidePane">
                                        <span class="dashboard-image">
                                            <span class="item-image icon-about"></span>
                                        </span>
                                        <span class="text" aria-hidden="true" title="About">About</span>
                                    </NavLink>
                                </li>
                            </ul>
                        </div>
                   </div>
               </ChildContent>

    </SfSidebar>
    <SfDialog @ref="dlg"
          Width="350px"
          IsModal="true"
          ShowCloseIcon="true"
          Visible="@showDialog"
          Header="Actualización disponible">
    <DialogTemplates>
        <Content>
            <div>
                <p>@dialogText</p>
                @if (!string.IsNullOrWhiteSpace(downloadUrl))
                {
                    <a href="@downloadUrl" target="_blank">Descargar / Instalar</a>
                }
            </div>
        </Content>
        <FooterTemplate>
            <SfButton CssClass="e-primary" OnClick="ConfirmUpdate">Actualizar</SfButton>
            <SfButton OnClick="()=> showDialog=false">Después</SfButton>
        </FooterTemplate>
    </DialogTemplates>
</SfDialog>
    <main class="main-content">
        @Body
    </main>
</div>

@code{
    [Inject]
    protected AppointmentService Service { get; set; }
    [Inject]
    protected IJSRuntime JsRuntime { get; set; }
    SfDialog? dlg;
    bool showDialog;
    string? downloadUrl;
    string dialogText = "";
    private bool onDocumentClick { get; set; }
    private bool isDevice { get; set; }

    private string target { get; set; } = "#loader-content";

    private string visible { get; set; } = "hidden";
    private string OverlayClass { get; set; }

    private string hide { get; set; }
    private string opacity { get; set; } = "0";
    private bool open { get; set; } = true;
    private List<NavigationMenu> navigationItems { get; set; }

    private void CloseSidePane()
    {
        if(this.isDevice){
            open = false;
        }
    }

    public void OnCreate()
    {
        this.hide = "sb-hide";
        this.visible = "visible";
        this.opacity = "1";
    }

    protected override void OnInitialized()
    {
        this.navigationItems = Service.NavigationMenu;
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.isDevice = await JSRuntime.InvokeAsync<bool>("checkBrowserDevice");
            this.onDocumentClick = this.isDevice;
            // Evita checar muchas veces: ejemplo, 1 vez por día
            var last = Preferences.Get("last_update_check", DateTime.MinValue);
            if (last.Date == DateTime.Today) return;

            string platform = DeviceInfo.Platform == DevicePlatform.Android ? "android" : "windows";
            var latest = await Updater.GetLatestAsync(platform);

            Preferences.Set("last_update_check", DateTime.Now);

            if (latest is null) return;

            var currentBuildStr = VersionTracking.CurrentBuild; // p.ej. "21"
            var currentBuild = int.TryParse(currentBuildStr, out var b) ? b : 1;

            if (latest.VersionCode > currentBuild)
            {
                dialogText = $"Nueva versión {(latest.Version ?? latest.VersionCode.ToString())} disponible.\n{latest.Notes}";
                downloadUrl = latest.FileUrl;
                showDialog = true;
                StateHasChanged();
            }
        }
    }
    private async Task ConfirmUpdate(MouseEventArgs args)
    {
        if (string.IsNullOrWhiteSpace(downloadUrl)) { showDialog = false; return; }

        // Android: abre el APK (sideload) o página de descarga
        // Windows: idealmente apunta a .appinstaller
        await Launcher.Default.OpenAsync(downloadUrl);
        showDialog = false;
    }
    private void showSideBar()
    {
        open = true;
    }
}